/*20180104*/

USE ODS;

DROP TABLE IF EXISTS ODS_HC_FACTURAS;


CREATE TABLE ODS_HC_FACTURAS
(ID_FACTURA INT(10) UNSIGNED NOT NULL PRIMARY KEY
, ID_CLIENTE INT(10) UNSIGNED
, FC_INICIO DATETIME
, FC_FIN DATETIME
, FC_ESTADO DATETIME
, FC_PAGO DATETIME
, ID_CICLO_FACTURACION INT(10) UNSIGNED
, ID_METODO_PAGO INT(10) UNSIGNED
, CANTIDAD INT(10)
, FC_INSERT DATETIME
, FC_MODIFICACION DATETIME);

DROP TABLE IF EXISTS ODS_DM_METODOS_PAGO;

CREATE TABLE ODS_DM_METODOS_PAGO
(ID_METODO_PAGO INT(10) UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT
, DE_METODO_PAGO VARCHAR(512)
, FC_INSERT DATETIME
, FC_MODIFICACION DATETIME);


DROP TABLE IF EXISTS ODS_DM_CICLOS_FACTURACION;

CREATE TABLE ODS_DM_CICLOS_FACTURACION
(ID_CICLO_FACTURACION INT(10) UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT
, DE_CICLO_FACTURACION VARCHAR(512)
, FC_INSERT DATETIME
, FC_MODIFICACION DATETIME);


/*RELACION DE LAS TABLAS*/


USE ODS;
ALTER TABLE ODS.ODS_HC_FACTURAS ADD INDEX fk_fac_met_idx (ID_METODO_PAGO ASC);
ALTER TABLE ODS.ODS_HC_FACTURAS ADD CONSTRAINT fk_fac_met FOREIGN KEY (ID_METODO_PAGO)
	REFERENCES ODS.ODS_DM_METODOS_PAGO (ID_METODO_PAGO);
    
USE ODS;
ALTER TABLE ODS.ODS_HC_FACTURAS ADD INDEX fk_fac_ciclo_idx (ID_CICLO_FACTURACION ASC);
ALTER TABLE ODS.ODS_HC_FACTURAS ADD CONSTRAINT fk_ser_can FOREIGN KEY (ID_CICLO_FACTURACION)
	REFERENCES ODS.ODS_DM_CICLOS_FACTURACION (ID_CICLO_FACTURACION);

USE ODS;
ALTER TABLE ODS.ODS_HC_FACTURAS ADD INDEX fk_fact_cli_idx (ID_CLIENTE ASC);
ALTER TABLE ODS.ODS_HC_FACTURAS ADD CONSTRAINT fk_fact_cli FOREIGN KEY (ID_CLIENTE)
	REFERENCES ODS.ODS_HC_CLIENTES (ID_CLIENTE);
    
    
/* POBLACION TABLAS*/  


INSERT INTO ODS_DM_METODOS_PAGO (DE_METODO_PAGO, FC_INSERT, FC_MODIFICACION)
select distinct UPPER(TRIM(BILL_METHOD)) DE_METODO_PAGO, NOW(), NOW()
FROM STAGE.STG_FACTURAS_FCT FACT
WHERE LENGTH(TRIM(BILL_METHOD))<>0;
INSERT INTO ODS_DM_METODOS_PAGO VALUES (98,'NO APLICA', NOW(),NOW());
INSERT INTO ODS_DM_METODOS_PAGO VALUES (99,'DESCONOCIDO', NOW(),NOW());

ANALYZE TABLE ODS_DM_METODOS_PAGO;  
    
INSERT INTO ODS_DM_CICLOS_FACTURACION (DE_CICLO_FACTURACION, FC_INSERT, FC_MODIFICACION)
select distinct UPPER(TRIM(BILL_CYCLE)) DE_CICLO_FACTURACION, NOW(), NOW()
FROM STAGE.STG_FACTURAS_FCT FACT
WHERE LENGTH(TRIM(BILL_CYCLE))<>0;
INSERT INTO ODS_DM_CICLOS_FACTURACION VALUES (98,'NO APLICA', NOW(),NOW());
INSERT INTO ODS_DM_CICLOS_FACTURACION VALUES (99,'DESCONOCIDO', NOW(),NOW());

ANALYZE TABLE ODS_DM_CICLOS_FACTURACION; 




TRUNCATE ODS_HC_FACTURAS;

SET FOREIGN_KEY_CHECKS=0;


INSERT INTO ODS_HC_FACTURAS
select FACT.BILL_REF_NO ID_FACTURA
, CASE WHEN TRIM(CLI.ID_CLIENTE)<>'' THEN TRIM(CLI.ID_CLIENTE) ELSE  999999 END ID_CLIENTE
, CASE WHEN length(TRIM(START_DATE))<>0 THEN STR_TO_DATE(START_DATE, '%Y-%m-%d %T') ELSE  str_to_date('31/12/9999', '%Y-%m-%d %T') END FC_INICIO
, CASE WHEN length(TRIM(END_DATE))<>0 THEN STR_TO_DATE(END_DATE, '%Y-%m-%d') ELSE  str_to_date('31/12/9999', '%Y-%m-%d') END FC_FIN
, CASE WHEN length(TRIM(STATEMENT_DATE))<>0 THEN STR_TO_DATE(STATEMENT_DATE, '%Y-%m-%d %T') ELSE  str_to_date('31/12/9999', '%Y-%m-%d %T') END FC_ESTADO
, CASE WHEN length(TRIM(PAYMENT_DATE))<>0 THEN STR_TO_DATE(PAYMENT_DATE, '%Y-%m-%d %T') ELSE  str_to_date('31/12/9999', '%Y-%m-%d %T') END FC_PAGO
, CICLOS.ID_CICLO_FACTURACION
, METODO.ID_METODO_PAGO
, CASE WHEN length(TRIM(AMOUNT))<>0 THEN TRIM(AMOUNT) ELSE 'DESCONOCIDO' END CANTIDAD
, NOW() 
, NOW()
from STAGE.STG_FACTURAS_FCT FACT
LEFT OUTER JOIN ODS.ODS_HC_CLIENTES CLI ON CASE WHEN LENGTH(TRIM(CUSTOMER_ID))<>0 THEN UPPER(TRIM(CUSTOMER_ID)) ELSE 'DESCONOCIDO' END=CLI.ID_CLIENTE
INNER JOIN ODS.ODS_DM_CICLOS_FACTURACION CICLOS ON CASE WHEN LENGTH(TRIM(BILL_CYCLE))<>0 THEN UPPER(TRIM(BILL_CYCLE)) ELSE 'DESCONOCIDO' END=CICLOS.DE_CICLO_FACTURACION
INNER JOIN ODS.ODS_DM_METODOS_PAGO METODO ON CASE WHEN LENGTH(TRIM(BILL_METHOD))<>0 THEN UPPER(TRIM(BILL_METHOD)) ELSE 'DESCONOCIDO' END=METODO.DE_METODO_PAGO;

ANALYZE TABLE ODS_HC_FACTURAS;

SET FOREIGN_KEY_CHECKS=1;


